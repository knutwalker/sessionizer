[env]
# env vars are added to every window in this session
# use a `KEY = "VALUE"` format

# [[windows]]
#
# To spawn new windows, uncomment the `[[windows]]` above and add an
# entry or multiple entries with the following keys:
#
# name = "the window name" # if missing, name is derived from the command
# dir = "dir of that window, a path relative to session sir" # uses session dir if empty
# command = "a command to run in this window" # if empty, opens a shell window
# on-exit = "shell" # what happens when the command exists. See docs for details.

# [[run]]
#
# To run command in the main window after creating the session, uncomment the `[[run]]`
# above and add an entry or multiple entries with the following keys:
#
# command = "the command to run in the main window"

# [layout]
#
# The `layout` can be used to describe the pane layout of the initial window.
# A layout must be either a `split` together with at least one sub layout in
# the `panes` array, or it is an entry like `run` (`command`, `dir`, `on-exit`).
# The following example configures 4 panes, first in a vertical split, then
# each of those has two panes in a horizontal split

# split = "vertical"
#
# [[layout.panes]]
# size = "80%" # The size parameter of the first entry in each panes section
#              # is ignored. Its value is implied from the remainder after
#              # spawning all the other panes in this split.
# split = "horizontal"
#
# [[layout.panes.panes]]
# command = "echo 'top left'"
#
# [[layout.panes.panes]]
# size = "30%"
# command = "echo 'top right'"
#
# [[layout.panes]]
# size = "20%"
# split = "horizontal"
#
# [[layout.panes.panes]]
# command = "echo 'bottom left'"
#
# [[layout.panes.panes]]
# size = "40%"
# command = "echo 'bottom right'"

# vim: set ft=toml:
